Auxiliary tools
----------------------------------------------------

Lammps Dump format to POSCAR format 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Examples (How to output dump.atom)** ::

    write_dump all custom dump.atom id type x y z modify format line "%d %d %10.15g %10.15g %10.15g"

**Examples** ::

    $(pyml)/tools/lammps/lammps2poscar.py dump.atom 


POSCAR format to Lammps structure format
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Examples** ::
    
    $(pyml)/tools/lammps/poscar2lammps.py -p POSCAR
    $(pyml)/tools/lammps/poscar2lammps.py -p POSCAR --mass
    $(pyml)/tools/lammps/poscar2lammps.py -p POSCAR --mass -e Ti Al

tools/spg.py
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
**Examples** ::

    ($pyml)/tools/spg.py -p poscar --refine_cell --space_group

**Examples (How to use from python)** ::

    from pyml.common.structure import Structure
    from pyml.tools.spg import SymCell

    sc = SymCell('poscar', symprec=1e-5)
    st = sc.refine_cell()
    st.print_poscar()
    sg = sc.get_spacegroup()

regression/supervised_learning.py
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Examples (How to use from python)** ::

    from pyml.regression.supervised_learning import KernelRidge as KR

    x, y = np.load('x_train.npy'), np.load('y_train.npy')

    reg = KR()
    reg.fit(x, y, kernel='rbf', alpha=1e-3, gamma=0.01)
    y_pred = reg.predict(x)

    alpha, gamma, rmse, rmse_std \
        = reg.optimization(x, y, kernel='linear', n_times=100, iprint=True)
    y_pred = reg.predict(x)

    rmse_test = reg.fit_error(x_train, x_test, y_train, y_test, \
        kernel='rbf', alpha=1e-3, gamma=0.01)
    y_test_pred = reg.predict(x_test)

Modify poscar files
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Examples (How to use from python)** ::

    from pyml.common.readvasp import Poscar
    from pyml.common.structure import Structure

    p = Poscar('poscar')
    axis, positions, n_atoms, elements, types = p.get_structure()
    axis *= 3.5
    st = Structure(axis, positions, n_atoms, elements, types)
    st.remove(1)
    dirname = './dft/'+ system + '/init/' + n + '/'
    os.makedirs(dirname, exist_ok=True)
    st.print_poscar_tofile(filename=dirname+'POSCAR')

Cif format to POSCAR format
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Examples** ::
    
    $(pyml)/tools/cif2poscar.py test.cif


Prototype structures from ICSD
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Examples** ::

    $(pyml)/tools/get_icsd.py ./data-20160509/icsd_data --anx NO
    $(pyml)/tools/get_icsd.py ./data-20160509/icsd_data --nary 2 --metallic --remove_noname
    $(pyml)/tools/get_icsd.py ./data-20160509/icsd_data --nary 2 --ionic --remove_noname

